<style>
  .collection-products {
    padding: 40px 20px;
  }

  .collection-products h2 {
    font-size: 2rem;
    text-align: center;
    margin-bottom: 30px;
  }

  .product-display.layout-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
  }

  .product-card.grid-style {
    width: 240px;
    height: 370px; /* Fixed height for uniformity */
    text-align: center;
    border: 1px solid #eee;
    padding: 15px;
    border-radius: 10px;
    transition: box-shadow 0.3s;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .product-card.grid-style:hover {
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  .product-card.grid-style img {
    width: 100%;
    height: 250px;
    object-fit: cover;
    border-radius: 5px;
  }

  .product-card.grid-style h3 {
    font-size: 1rem;
    margin: 10px 0 5px;
  }

  .product-card.grid-style p {
    font-weight: bold;
    color: #333;
  }

  .product-display.layout-editorial {
    display: flex;
    flex-direction: column;
    gap: 40px;
  }

  .product-card.editorial-style {
    display: flex;
    gap: 30px;
    align-items: center;
    border-bottom: 1px solid #eee;
    padding-bottom: 20px;
  }

  .product-card.editorial-style img {
    width: 300px;
    height: 200px;
    object-fit: cover;
    border-radius: 8px;
  }

  .product-card.editorial-style .product-text {
    max-width: 600px;
  }

  .product-card.editorial-style h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
  }

  .product-card.editorial-style p {
    margin-bottom: 8px;
    line-height: 1.5;
  }

 .add-to-cart-btn {
  background: linear-gradient(to right, #6ec1e4, #a6d5f7); /* soft blue gradient */
  color: white;
  font-size: 15px;
  font-weight: bold;
  padding: 10px 22px;
  border: none;
  border-radius: 30px;
  cursor: pointer;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease;
}

.add-to-cart-btn:hover {
  background: linear-gradient(to right, #a6d5f7, #6ec1e4); /* reversed on hover */
  transform: scale(1.05);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);
}
.cart-drawer {
  position: fixed;
  top: 0;
  right: -300px; /* hidden initially */
  width: 300px;
  height: 100%;
  background: #fff;
  box-shadow: -2px 0 10px rgba(0, 0, 0, 0.2);
  padding: 20px;
  transition: right 0.3s ease;
  z-index: 1000;
}

.cart-drawer.open {
  right: 0; 
}


</style>


{% if section.settings.collection != blank %}
  <div class="collection-products">
    <h2>{{ section.settings.collection.title }}</h2>

    <div class="product-display layout-{{ section.settings.display_type }}">
      {% for product in section.settings.collection.products %}
        {% if section.settings.display_type == 'grid' %}
          <div class="product-card grid-style">
  <a href="{{ product.url }}" target="_blank">
    <img src="{{ product.featured_image | image_url: width: 400 }}" alt="{{ product.title }}">
    <h3>{{ product.title }}</h3>
    <p>{{ product.price | money }}</p>
  </a>
  <form method="post" action="/cart/add">
    <input type="hidden" name="id" value="{{ product.variants.first.id }}">
    <input type="hidden" name="return_to" value="/cart">
    <button type="submit" class="add-to-cart-btn">Add to Cart</button>
  </form>
</div>

        {% elsif section.settings.display_type == 'editorial' %}
          <div class="product-card editorial-style">
<a href="{{ product.url }}" target="_blank">
              <img src="{{ product.featured_image | image_url: width: 800 }}" alt="{{ product.title }}">
              <div class="product-text">
                <h2>{{ product.title }}</h2>
                <p>{{ product.description | strip_html | truncatewords: 30 }}</p>
                <p><strong>{{ product.price | money }}</strong></p>
              </div>
            </a>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div> 
{% else %}
{% endif %}


<!-- Drawer Logic -->

<script>
  const cartDrawer = document.querySelector(".cart-drawer");
  const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");

  addToCartButtons.forEach(button => {
    button.addEventListener("click", (e) => {
      cartDrawer.classList.add("open");
    });
  });

  // Optional close logic
  document.addEventListener("click", (e) => {
    if (!cartDrawer.contains(e.target) && !e.target.classList.contains('add-to-cart-btn')) {
      cartDrawer.classList.remove("open");
    }
  });
</script>



{% schema %}
{
  "name": "Collection Products",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Select Collection"
    },
    {
      "type": "select",
      "id": "display_type",
      "label": "Display Type",
      "default": "grid",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "editorial",
          "label": "Editorial"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Products",
      "category": "Products"
    }
  ]
}
{% endschema %}
