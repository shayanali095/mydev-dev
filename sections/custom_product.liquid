<style>
  .collection-products {
    padding: 40px 20px;
  }

  .collection-products h2 {
    font-size: 2rem;
    text-align: center;
    margin-bottom: 30px;
  }

  .product-display.layout-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
  }

  .product-card.grid-style {
    width: 240px;
    height: 370px;
    text-align: center;
    border: 1px solid #eee;
    padding: 15px;
    border-radius: 10px;
    transition: box-shadow 0.3s;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .product-card.grid-style:hover {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .product-card.grid-style img {
    width: 100%;
    height: 250px;
    object-fit: cover;
    border-radius: 5px;
  }

  .product-card.grid-style h3 {
    font-size: 1rem;
    margin: 10px 0 5px;
  }

  .product-card.grid-style p {
    font-weight: bold;
    color: #333;
  }

  .product-display.layout-editorial {
    display: flex;
    flex-direction: column;
    gap: 40px;
  }

  .product-card.editorial-style {
    display: flex;
    gap: 30px;
    align-items: center;
    border-bottom: 1px solid #eee;
    padding-bottom: 20px;
  }

  .product-card.editorial-style img {
    width: 300px;
    height: 200px;
    object-fit: cover;
    border-radius: 8px;
  }

  .product-card.editorial-style .product-text {
    max-width: 600px;
  }

  .product-card.editorial-style h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
  }

  .product-card.editorial-style p {
    margin-bottom: 8px;
    line-height: 1.5;
  }

  .add-to-cart-btn {
    background: linear-gradient(to right, #6ec1e4, #a6d5f7);
    color: white;
    font-size: 15px;
    font-weight: bold;
    padding: 10px 22px;
    border: none;
    border-radius: 30px;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  .add-to-cart-btn:hover {
    background: linear-gradient(to right, #a6d5f7, #6ec1e4);
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);
  }

  .cart-drawer {
    position: fixed;
    top: 0;
    right: -350px;
    width: 300px;
    height: 100%;
    background: #fff;
    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.2);
    padding: 20px;
    transition: right 0.3s ease;
    z-index: 1000;
    overflow-y: auto;
  }

  .cart-drawer.open {
    right: 0;
  }

  .cart-drawer h3 {
    margin-top: 10px;
  }

  .cart-items div {
    border-bottom: 1px solid #eee;
    padding: 10px 0;
  }

  #cross-btn {
    cursor: pointer;
    font-size: 17px;
    position: absolute;
    top: 17px;
    right: 15px;
    color: #333;
  }
</style>

<!-- Cart Icon Button -->
<li>
  <a
    id="open-cart-drawer"
    href="/cart"
    style="
      position: fixed;
      bottom: 20px;
      right: 20px;
      font-size: 28px;
      text-decoration: none;
      background: white;
      border-radius: 50%;
      padding: 10px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      z-index: 999;
    "
  >
    üõí
  </a>
</li>

<!-- Product Section -->
{% if section.settings.collection != blank %}
  <div class="collection-products">
    <h2>{{ section.settings.collection.title }}</h2>

    <div class="product-display layout-{{ section.settings.display_type }}">
      {% for product in section.settings.collection.products %}
        {% if section.settings.display_type == 'grid' %}
          <div class="product-card grid-style">
            <a href="{{ product.url }}" target="_blank">
              <img src="{{ product.featured_image | image_url: width: 400 }}" alt="{{ product.title }}">
              <h3>{{ product.title }}</h3>
              <p>{{ product.price | money }}</p>
            </a>
            <button
              class="add-to-cart-btn"
              data-product-id="{{ product.variants.first.id }}"
              data-title="{{ product.title }}"
              data-price="{{ product.price | money }}"
              data-image="{{ product.featured_image | image_url: width: 100 }}"
            >
              Add to Cart
            </button>
          </div>
        {% elsif section.settings.display_type == 'editorial' %}
          <div class="product-card editorial-style">
            <a href="{{ product.url }}" target="_blank">
              <img src="{{ product.featured_image | image_url: width: 800 }}" alt="{{ product.title }}">
              <div class="product-text">
                <h2>{{ product.title }}</h2>
                <p>{{ product.description | strip_html | truncatewords: 30 }}</p>
                <p>
                  <strong>{{ product.price | money }}</strong>
                </p>
              </div>
            </a>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
{% endif %}

<!-- Cart Drawer -->
<div class="cart-drawer">
  <span id="cross-btn">‚ùå</span>
  <h3>Your Cart</h3>
  <div class="cart-items"></div>
</div>

<!-- JavaScript -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const openCartBtn = document.getElementById("open-cart-drawer");
    const cartDrawer = document.querySelector(".cart-drawer");
    const cartItems = document.querySelector(".cart-items");
    const crossBtn = document.getElementById("cross-btn");

    // Open cart
    openCartBtn.addEventListener("click", function (e) {
      e.preventDefault();
      cartDrawer.classList.add("open");
      document.body.classList.add("no-scroll");
    });

    // Close cart
    crossBtn.addEventListener("click", () => {
      cartDrawer.classList.remove("open");
      document.body.classList.remove("no-scroll");
    });

    // Load cart items
    async function loadCart() {
      const res = await fetch("/cart.js");
      const cart = await res.json();
      cartItems.innerHTML = "";
      cart.items.forEach(item => {
        const itemElement = document.createElement("div");
        itemElement.innerHTML = `
          <div style="display:flex; gap:10px; align-items:center; margin-bottom: 10px;">
            <img src="${item.image}" style="width:50px; height:50px; object-fit:cover; border-radius:5px;" />
            <div>
              <div style="font-weight:bold;">${item.product_title}</div>
              <div style="color:#666;">$${(item.final_line_price / 100).toFixed(2)}</div>
            </div>
          </div>
        `;
        cartItems.appendChild(itemElement);
      });
    }

    // Add to cart button handler
    document.querySelectorAll(".add-to-cart-btn").forEach(button => {
      button.addEventListener("click", async () => {
        const id = button.dataset.productId;

        await fetch("/cart/add.js", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
          body: JSON.stringify({ id, quantity: 1 })
        });

        await loadCart();
        cartDrawer.classList.add("open");
      });
    });

    // Click outside to close
    document.addEventListener("click", (e) => {
      if (!cartDrawer.contains(e.target) && !e.target.closest("#open-cart-drawer") && !e.target.classList.contains("add-to-cart-btn")) {
        cartDrawer.classList.remove("open");
        document.body.classList.remove("no-scroll");
      }
    });

    loadCart(); // Initial load
  });
</script>

<!-- Shopify Schema -->
{% schema %}
{
  "name": "Collection Products",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Select Collection"
    },
    {
      "type": "select",
      "id": "display_type",
      "label": "Display Type",
      "default": "grid",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "editorial",
          "label": "Editorial"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Products",
      "category": "Products"
    }
  ]
}
{% endschema %}
